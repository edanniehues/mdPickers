{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","time","autoSwitch","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","moment","clockHours","parseInt","format","clockMinutes","minutes","switchView","close","confirm","setAM","hours","hour","setPM","cancel","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","Math","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","oldSelected","console","log","init","i","push","DatePickerCtrl","$timeout","currentDate","options","date","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","min","floor","abs","selectYear","animate","previousYear","nextYear","showYear","yearTopIndex","showCalendar","animating","noop","then","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","value","enabled","isDayEnabled","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","isDate","minDateValidator","isSameOrAfter","maxDateValidator","isSameOrBefore","filterValidator","filter","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","supportsTime","input","document","createElement","e","$animate","bindToController","replace","template","controller","controllerAs","link","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","on","off","$on","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","Date","now","isObject","show","clickOutsideToClose","targetEvent","locals","skipHide","$mdpTimePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","timeFormat","disabled","ngModel","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","target","$viewVaue","clone","append","$error","setInvalid","Object","keys","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","supportsDate","DISPLAY_FORMAT","setDisplayFormat","datePicker","animElements","map","a","direction","addClass","$mdpDatePicker","dateFormat","pre","post","updateDate","model","isError","$invalid","month"],"mappings":"CAAA,WACA,YAuEA,SAASA,GAAeC,EAAQC,EAAWC,EAAMC,EAAYC,GAC5D,GAAIC,GAAOC,IACRA,MAAKC,WAAa,EAClBD,KAAKE,aAAe,EACpBF,KAAKG,YAAcH,KAAKC,WACxBD,KAAKJ,KAAOQ,OAAOR,GACnBI,KAAKH,aAAeA,EAEpBG,KAAKK,WAAaC,SAASN,KAAKJ,KAAKW,OAAO,MAC5CP,KAAKQ,aAAeF,SAASN,KAAKJ,KAAKa,WAE1Cf,EAAOI,SAAWA,EAElBE,KAAKU,WAAa,SAASC,GACvBZ,EAAKI,aAAeJ,EAAKE,WAC3BF,EAAKI,YAAcJ,EAAKG,aACfS,GACTX,KAAKY,WAIPZ,KAAKa,MAAQ,WACHd,EAAKH,KAAKkB,SAAW,IACpBf,EAAKH,KAAKmB,KAAKhB,EAAKH,KAAKmB,OAAS,KAG1Cf,KAAKgB,MAAQ,WACNjB,EAAKH,KAAKkB,QAAU,IACnBf,EAAKH,KAAKmB,KAAKhB,EAAKH,KAAKmB,OAAS,KAG1Cf,KAAKiB,OAAS,WACVtB,EAAUsB,UAGdjB,KAAKY,QAAU,WACXjB,EAAUuB,KAAKlB,KAAKJ,KAAKuB,WAIjC,QAASC,GAAU1B,GACf,GAAI2B,GAAa,QACbC,EAAe,UACfvB,EAAOC,IAEXA,MAAKuB,SAAW,GAChBvB,KAAKwB,SAELxB,KAAKyB,aACDX,OACIY,MAAO,IAEXjB,SACIiB,MAAO,KAIf1B,KAAK2B,gBAAkB,WACnB,GAAIC,GAAU,CACd,QAAO7B,EAAK8B,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAGlB,GAAIE,GAAUC,KAAKC,MAAMjC,EAAKkC,UAAY,IAAML,IAAY,GAC5D,QACIM,oBAAqB,UAAYJ,EAAU,OAC3CK,gBAAiB,UAAYL,EAAU,OACvCM,UAAa,UAAYN,EAAU,SAI3C9B,KAAKqC,aAAe,SAASC,GACzBA,EAAMA,GAAO,IAAM,EAAIA,CACvB,IAAIV,GAAU,CACd,QAAO7B,EAAK8B,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAIlB,GAAIhC,GAAOmC,KAAKC,MAAMJ,EAAU,IAAMU,EAKtC,OAHAvC,GAAKwC,QACD3C,GAEGA,GAGXI,KAAKuC,QAAU,SAAS3C,EAAMiC,GAK1B,OAJH7B,KAAKwC,YAAcxC,KAAKiC,SACrBjC,KAAKiC,SAAWrC,EAChB6C,QAAQC,IAAI,YAAc9C,GAEnBG,EAAK8B,MACR,IAAKR,GAC2B,MAAzBtB,EAAKH,KAAKW,OAAO,OAAcX,GAAQ,IAC1CI,KAAKJ,KAAKkB,MAAMlB,EAChB,MACJ,KAAK0B,GACE1B,EAAO,KAAIA,GAAQ,IACtBI,KAAKJ,KAAKa,QAAQb,KAM9BI,KAAK2C,KAAO,WAER,OADA5C,EAAK8B,KAAO9B,EAAK8B,MAAQ,QAClB9B,EAAK8B,MACR,IAAKR,GACD,IAAI,GAAIuB,GAAI,EAAGA,GAAK,GAAIA,IACpB7C,EAAKyB,MAAMqB,KAAKD,EACpB7C,GAAKkC,SAAWlC,EAAKH,KAAKkB,SAAW,EAClCf,EAAKkC,SAAW,KAAIlC,EAAKkC,UAAY,GAExC,MACJ,KAAKX,GACD,IAAI,GAAIsB,GAAI,EAAGA,GAAK,GAAIA,GAAG,EACvB7C,EAAKyB,MAAMqB,KAAKD,EACpB7C,GAAKyB,MAAMqB,KAAK,GAChB9C,EAAKkC,SAAWlC,EAAKH,KAAKa,WAAa,IAMnDT,KAAK2C,OAyRT,QAASG,GAAepD,EAAQC,EAAWG,EAAUiD,EAAUC,EAAaC,GACxE,GAAIlD,GAAOC,IAEXA,MAAKkD,KAAO9C,OAAO4C,GACnBhD,KAAKmD,QAAUF,EAAQE,SAAW/C,OAAO6C,EAAQE,SAASC,UAAYhD,OAAO6C,EAAQE,SAAW,KAChGnD,KAAKqD,QAAUJ,EAAQI,SAAWjD,OAAO6C,EAAQI,SAASD,UAAYhD,OAAO6C,EAAQI,SAAW,KAChGrD,KAAKsD,cAAgBL,EAAQK,eAAiB,cAC9CtD,KAAKuD,WAAaC,QAAQC,WAAWR,EAAQM,YAAcN,EAAQM,WAAa,KAChFvD,KAAK0D,eAAgB,EAGpB1D,KAAKmD,SAAWnD,KAAKqD,SACpBrD,KAAKqD,QAAQM,SAAS3D,KAAKmD,WAC9BnD,KAAKqD,QAAUjD,OAAOJ,KAAKmD,SAASS,IAAI,EAAG,SAIzC5D,KAAKkD,OAEDlD,KAAKmD,SAAWnD,KAAKkD,KAAKS,SAAS3D,KAAKmD,WAC9CnD,KAAKkD,KAAO9C,OAAOJ,KAAKmD,UAIlBnD,KAAKqD,SAAWrD,KAAKkD,KAAKW,QAAQ7D,KAAKqD,WAC7CrD,KAAKkD,KAAO9C,OAAOJ,KAAKqD,WAI1BrD,KAAK8D,WACEC,cAAe,EACfC,UAAW,EACXC,MAAQlE,EAAKoD,QAAUpD,EAAKoD,QAAQe,OAAS,KAC7CC,IAAMpE,EAAKsD,QAAUtD,EAAKsD,QAAQa,OAAS,EAC3CE,eAAgB,SAASC,GAIxB,MAHGrE,MAAK+D,cAAgBM,IACjBrE,KAAK+D,cAAgBM,GAErBrE,KAAKiE,MAAQI,GAErBC,UAAW,WACP,MAAOvC,MAAKwC,IACRvE,KAAK+D,cAAgBhC,KAAKyC,MAAMxE,KAAKgE,UAAY,GACjDjC,KAAK0C,IAAIzE,KAAKiE,MAAQjE,KAAKmE,KAAO,KAK9CzE,EAAOI,SAAWA,EAClBJ,EAAOwE,KAAOlE,KAAKkD,KAAKgB,OAE3BlE,KAAK0E,WAAa,SAASR,GACpBnE,EAAKmD,KAAKgB,KAAKA,GACfxE,EAAOwE,KAAOA,EACdnE,EAAK2D,eAAgB,EACrB3D,EAAK4E,WAGT3E,KAAK4E,aAAe,WACnB,GAAIV,IAAQlE,KAAKkD,KAAK3C,OAAO,QAAU,CACvCP,MAAK0E,WAAWR,IAGjBlE,KAAK6E,SAAW,WACf,GAAIX,IAAQlE,KAAKkD,KAAK3C,OAAO,QAAU,CACvCP,MAAK0E,WAAWR,IAGjBlE,KAAK8E,SAAW,WACZ/E,EAAKgF,aAAgBhF,EAAKmD,KAAKgB,OAASnE,EAAK+D,UAAUG,MAASlC,KAAKyC,MAAMzE,EAAK+D,UAAUE,UAAY,GACtGjE,EAAK+D,UAAUC,cAAiBhE,EAAKmD,KAAKgB,OAASnE,EAAK+D,UAAUG,MAAS,EAC3ElE,EAAK2D,eAAgB,GAGzB1D,KAAKgF,aAAe,WAChBjF,EAAK2D,eAAgB,GAGzB1D,KAAKiB,OAAS,WACVtB,EAAUsB,UAGdjB,KAAKY,QAAU,WACd,GAAIsC,GAAOlD,KAAKkD,IAEZlD,MAAKmD,SAAWnD,KAAKkD,KAAKS,SAAS3D,KAAKmD,WAC3CD,EAAO9C,OAAOJ,KAAKmD,UAGhBnD,KAAKqD,SAAWrD,KAAKkD,KAAKW,QAAQ7D,KAAKqD,WAC1CH,EAAO9C,OAAOJ,KAAKqD,UAGjB1D,EAAUuB,KAAKgC,EAAK/B,WAGxBnB,KAAK2E,QAAU,WACX5E,EAAKkF,WAAY,EACjBlC,EAASS,QAAQ0B,MAAMC,KAAK,WACxBpF,EAAKkF,WAAY,KAsE7B,QAASG,GAAa1F,GACrB,GAAIK,GAAOC,IACXA,MAAKqF,IAAMjF,OAAOkF,aAAaC,iBAE5BvF,KAAKwF,YAAcC,OACfrF,OAAOsF,cAAcC,MACjB3F,KAAKqF,KAETjF,OAAOsF,cAAcC,MACjB,EACA3F,KAAKqF,MAIbrF,KAAK4F,eAEL5F,KAAK6F,eAAiB,WAClB,GAAIC,GAAO/F,EAAKmD,KAAK0C,cACjBG,EAAW3F,OAAOL,EAAKmD,MAAMA,KAAK,GAAG8C,MAAQhG,KAAKqF,GAEnDU,GAAW,IAAGA,EAAW/F,KAAKwF,SAASS,OAAS,EAInD,KAAI,GADAC,MACItD,EAAI,EAAGA,GAAMmD,EAAWD,EAAOlD,IAAK,CACxC,GAAIoD,GAAM,IACPpD,GAAImD,IACHC,GACIG,MAAQvD,EAAImD,EACZK,QAASrG,EAAKsG,aAAajG,OAAOL,EAAKmD,MAAMA,KAAKN,EAAImD,GAAU5E,YAGxE+E,EAAIrD,KAAKmD,GAGb,MAAOE,IAGXlG,KAAKqG,aAAe,SAASL,GACzB,QAAShG,KAAKmD,WAAWnD,KAAKmD,SAAW6C,IACnChG,KAAKqD,WAAWrD,KAAKqD,SAAW2C,IAChCjG,EAAKwD,YAAexD,EAAKwD,WAAWyC,KAG9ChG,KAAKsG,WAAa,SAASC,GACvBxG,EAAKmD,KAAKA,KAAKqD,IAGnBvG,KAAKwG,UAAY,WACbzG,EAAKmD,KAAKU,IAAI,EAAG,WAGrB5D,KAAKyG,UAAY,WACb1G,EAAKmD,KAAKwD,SAAS,EAAG,WAG1B1G,KAAK2G,kBAAoB,WACrB5G,EAAK6F,YAAc7F,EAAK8F,kBAG5BnG,EAAOkH,OAAO,WAAa,MAAQ7G,GAAKmD,KAAK2D,QAAU,SAASC,EAAUC,GACnED,GAAYA,IAAaC,GACxBhH,EAAK4G,sBAGb5G,EAAK4G,oBA0DT,QAASK,GAAgBb,EAAO5F,GAC5B,OAAQ4F,GAAS3C,QAAQyD,OAAOd,IAAU/F,OAAO+F,EAAO5F,GAAQ,GAAM6C,UAG1E,QAAS8D,GAAiBf,EAAO5F,EAAQ4C,GACrC,GAAIA,GAAU/C,OAAO+C,EAAS,cAAc,GACxCD,EAAOM,QAAQyD,OAAOd,GAAS/F,OAAO+F,GAAU/F,OAAO+F,EAAO5F,GAAQ,EAE1E,QAAQ4F,GACA3C,QAAQyD,OAAOd,KACdhD,EAAQC,WACTF,EAAKiE,cAAchE,GAG/B,QAASiE,GAAiBjB,EAAO5F,EAAQ8C,GACrC,GAAIA,GAAUjD,OAAOiD,EAAS,cAAc,GACxCH,EAAOM,QAAQyD,OAAOd,GAAS/F,OAAO+F,GAAU/F,OAAO+F,EAAO5F,GAAQ,EAE1E,QAAQ4F,GACA3C,QAAQyD,OAAOd,KACd9C,EAAQD,WACTF,EAAKmE,eAAehE,GAGhC,QAASiE,GAAgBnB,EAAO5F,EAAQgH,GACpC,GAAIrE,GAAOM,QAAQyD,OAAOd,GAAS/F,OAAO+F,GAAU/F,OAAO+F,EAAO5F,GAAQ,EAE1E,QAAQ4F,GACA3C,QAAQyD,OAAOd,KACd3C,QAAQC,WAAW8D,KACnBA,EAAOrE,GApyBpB,GAAIsE,GAAShE,QAAQgE,OAAO,aAC3B,aACA,YACA,UAGDA,GAAOC,QAAQ,kBAAmB,mBAAoB,SAASC,EAAiBC,GAC/EnE,QAAQoE,QAAQD,EAAkB,SAASE,EAAMxD,GAChDqD,EAAgBG,KAAKA,EAAKC,GAAID,EAAKE,UAIrCP,EAAOQ,KAAK,iBAAkB,mBAAoB,SAASC,EAAgBN,GAC1EnE,QAAQoE,QAAQD,EAAkB,SAASE,EAAMxD,GAChD4D,EAAeC,IAAIL,EAAKE,IAAKF,EAAKM,UAGpCX,EAAOY,SAAS,qBAERN,GAAI,mBACJC,IAAK,uBACLI,IAAK,4LAGLL,GAAI,oBACJC,IAAK,wBACLI,IAAK,6LAGLL,GAAI,kBACJC,IAAK,sBACLI,IAAK,kVAGLL,GAAI,YACJC,IAAK,gBACLI,IAAK,wRAGbX,EAAOa,UAAU,aAAc,UAAW,SAASC,GAChD,OACKC,SAAU,KACVC,SAAU,IACVC,QAAS,SAASC,GACd,GAAIC,GAAiBL,EAAQM,WAAWF,EAAS,mBAAmB,IAC/CJ,EAAQM,WAAWF,EAAS,mBAAmB,EAGpE,IAAKC,EAKL,MAFAD,GAAQG,YAAY,8BAA8B,UAQ9D,IAAIC,IAAe,CACnB,KACC,GAAIC,GAAQC,SAASC,cAAc,QACnCF,GAAMlH,KAAO,OACK,SAAfkH,EAAMlH,OACRiH,GAAe,GAEf,MAAMI,IA0IR1B,EAAOa,UAAU,YAAa,WAAY,WAAY,SAASc,EAAUpG,GACrE,OACIwF,SAAU,IACVa,kBACIvH,KAAQ,KACRjC,KAAQ,IACRC,WAAc,MAElBwJ,SAAS,EACTC,SAAU,khBASVC,YAAa,SAAUnI,GACvBoI,aAAc,QACdC,KAAM,SAASC,EAAOhB,EAASiB,EAAOC,GAClC,GACIC,IADUrG,QAAQkF,QAAQA,EAAQ,GAAGoB,cAAc,iBAClCJ,EAAMK,QAAQC,YAE/BC,EAAU,SAASC,GACnB,GAAIC,GAAkBD,EAAME,cAAcC,iBAAiB,GACvDC,EAAMJ,EAAME,cAAcG,YAAc,GAAML,EAAMM,MAAQL,EAAgBM,MAC5EC,EAAMR,EAAMS,MAAQR,EAAgBS,IAAQV,EAAME,cAAcS,aAAe,CAEzE9I,MAAKC,MAAOD,KAAK+I,MAAMR,EAAGI,IAAM,IAAM3I,KAAKgJ,IACrDhI,GAAS,WACLN,QAAQC,IAAIkH,EAAK3H,UAAY2H,EAAKpH,aAC/BoH,EAAK/J,aAAe,UAAW,SAASmL,QAAQd,EAAMrI,YAAgBgI,GAAgBA,EAAenJ,WAAWkJ,EAAK3H,UAAY2H,EAAKpH,eAIjJkG,GAAQuC,GAAG,YAAa,WACrBvC,EAAQuC,GAAG,YAAahB,KAG3BvB,EAAQuC,GAAG,UAAW,SAAS/B,GAC3BR,EAAQwC,IAAI,eAGhBxC,EAAQuC,GAAG,QAAShB,GACpBP,EAAMyB,IAAI,WAAY,WAClBzC,EAAQwC,IAAI,QAASjB,GACrBvB,EAAQwC,IAAI,YAAajB,UAMzCzC,EAAO4D,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,QAEnBtL,MAAKuL,iBAAmB,SAASC,GAC7BH,EAAWG,GAGfxL,KAAKyL,qBAAuB,SAASD,GACjCF,EAAeE,GAGnBxL,KAAK0L,MAAQ,YAAa,SAAS/L,GAC/B,GAAIgM,GAAa,SAAS/L,EAAMqD,GAI5B,MAHIO,SAAQyD,OAAOrH,KAAOA,EAAOgM,KAAKC,OACjCrI,QAAQsI,SAAS7I,KAAUA,MAEzBtD,EAAUoM,MACbxC,YAAc,SAAU,YAAa,OAAQ,aAAc,WAAY9J,GACvE+J,aAAc,aACdwC,qBAAqB,EACrB1C,SAAU,i5CAoB2FgC,EAAe,KAAOA,EAAe,gGAC5BD,EAAW,KAAOA,EAAW,yEAK3IY,YAAahJ,EAAQgJ,YACrBC,QACItM,KAAMA,EACNC,WAAYoD,EAAQpD,YAExBsM,UAAU,IAIlB,OAAOR,OAIfnE,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS+D,EAAgBrJ,GACtF,OACIwF,SAAU,IACV8D,QAAS,UACTC,YAAY,EACZhD,SAAU,SAASZ,EAASiB,GACxB,GAAI4C,GAAU/I,QAAQgJ,UAAU7C,EAAM8C,YAClCC,EAAclJ,QAAQgJ,UAAU7C,EAAMgD,gBAAkBhD,EAAMgD,eAAiB,GAC/EC,IAAcpJ,QAAQgJ,UAAU7C,EAAMkD,eAE1C,OAAO,0GACsErJ,QAAQgJ,UAAU7C,EAAMmD,aAAe,0BAA4B,IAAM,qFAGrHP,EAAU,eAAiB,IAAM,mCAC1CzD,EAAe,GAAK,wBAA2B,wBAA0BtF,QAAQgJ,UAAU7C,EAAMmD,aAAe,0BAA4B,IAAM,gBAAkBJ,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI/SlD,OACIqD,WAAc,aACdL,YAAe,kBACf7M,WAAc,kBACdmN,SAAY,iBAEhBvD,KAAM,SAASC,EAAOhB,EAASiB,EAAOsD,EAASC,GAqD3C,QAASC,GAAmBhH,GACxBiH,EAAa,GAAGjH,MAAQA,EACxBkH,EAAmBC,aAAaL,EAAQM,SAASpH,IAGrD,QAASqH,GAAW5N,GAChB,GAAIuG,GAAQ/F,OAAOR,EAAM4D,QAAQyD,OAAOrH,GAAQ,KAAO8J,EAAMqD,YAAY,GACrEU,EAAWtH,EAAM5F,OAAOmJ,EAAMqD,WAE/B5G,GAAM/C,WACL+J,EAAmBM,GACnBR,EAAQS,cAAcD,KAEtBN,EAAmBvN,GACnBqN,EAAQS,cAAc9N,KAGtBqN,EAAQU,WACRC,EAASC,SAAS,iBAClBlF,EAAekF,SAAS,qBAAqBD,EAASE,YAAY,gBAEtEb,EAAQc,UAYZ,QAASC,GAAqB9D,GACvBA,EAAM+D,OAAO9H,QAAU8G,EAAQiB,WAC9BV,EAAWtD,EAAM+D,OAAO9H,OAvFhC,GAAIiH,GAAe5J,QAAQkF,QAAQA,EAAQ,GAAGoB,cAAc,UACxDnB,EAAiBnF,QAAQkF,QAAQA,EAAQ,GAAGoB,cAAc,uBAC1DuD,EAAqB1E,EAAeY,WAAW,mBAEnD2D,GAAY,SAASiB,GAClBxF,EAAeyF,OAAOD,IAGzB,IAAIP,GAAWpK,QAAQkF,QAAQC,EAAe,GAAGmB,cAAc,iBAE/DJ,GAAM7H,KAAO6H,EAAMqD,WAAa,OAAS,OACzCrD,EAAMqD,WAAarD,EAAMqD,YAAc,QACvCrD,EAAM7J,WAAa6J,EAAM7J,aAAc,EAEvC6J,EAAM9C,OAAO,WAAa,MAAOqG,GAAQoB,QAAU,SAASvH,EAAUC,GAClEsG,EAAmBiB,YAAYrB,EAAQU,aAAeY,OAAOC,KAAKvB,EAAQoB,QAAQpI,UACnF,GAGHgH,EAAQwB,YAAYC,QAAQ,SAASvI,GACjC,GAAIvG,GAAO4D,QAAQyD,OAAOd,IAAU/F,OAAO+F,EAEvCgH,GADDvN,GAAQA,EAAKwD,UACOxD,EAAKW,OAAOmJ,EAAMqD,YAElB,QAG3BE,EAAQ0B,YAAYpO,OAAS,SAASqO,EAAYC,GAC9C,OAAQA,GAAarL,QAAQyD,OAAO4H,IAAczO,OAAOyO,EAAWnF,EAAMqD,YAAY,GAAM3J,WAGhG6J,EAAQ0B,YAAYG,SAAW,SAASF,EAAYC,GAChD,MAAOrL,SAAQuL,YAAYpF,EAAMmF,YAAc7B,EAAQM,SAASqB,KAAgB3B,EAAQM,SAASsB,IAGrG5B,EAAQ+B,SAASN,QAAQ,SAASvI,GAC9B,GAAI8I,GAAS7O,OAAO+F,EAAOuD,EAAMqD,YAAY,EAC7C,IAAGkC,EAAO7L,UAAW,CACjB,GAAGI,QAAQyD,OAAOgG,EAAQiC,aAAc,CACpC,GAAIC,GAAgB/O,OAAO6M,EAAQiC,YACnCC,GAAc1O,QAAQwO,EAAOxO,WAC7B0O,EAAcrO,MAAMmO,EAAOnO,SAC3BqO,EAAcC,QAAQH,EAAOG,WAE7BH,EAASE,EAEb,MAAOF,GAAO9N,SAEd,MAAO,QA4BfuI,EAAM2F,WAAa,SAASC,GACxBlD,EAAea,EAAQiC,aACnBjD,YAAaqD,EACbzP,WAAY6J,EAAM7J,aACnBsF,KAAK,SAASvF,GACb4N,EAAW5N,GAAM,MASzBwN,EAAanC,GAAG,mBAAoB+C,GAEpCtE,EAAMyB,IAAI,WAAY,WAClBiC,EAAalC,IAAI,mBAAoB8C,UAMrDxG,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS+D,EAAgBrJ,GACtF,OACIwF,SAAU,IACV8D,QAAS,UACT3C,OACIqD,WAAc,aACdlN,WAAc,mBAElB4J,KAAM,SAASC,EAAOhB,EAASiB,EAAOsD,EAASC,GAE3C,QAASmC,GAAWC,GAChBlD,EAAea,EAAQiC,aACnBjD,YAAaqD,EACbzP,WAAY6J,EAAM7J,aACnBsF,KAAK,SAASvF,GACbqN,EAAQS,cAActN,OAAOR,GAAMW,OAAOmJ,EAAMnJ,SAChD0M,EAAQc,YAPhBrE,EAAMnJ,OAASmJ,EAAMnJ,QAAU,QAW/BmI,EAAQuC,GAAG,QAASoE,GAEpB3F,EAAMyB,IAAI,WAAY,WAClBzC,EAAQwC,IAAI,QAASmE,SAQrC,IAAIE,IAAe,CACnB,KACC,GAAIxG,GAAQC,SAASC,cAAc,QACnCF,GAAMlH,KAAO,OACK,SAAfkH,EAAMlH,OACR0N,GAAe,GAEf,MAAMrG,IA0GR1B,EAAO4D,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,SACfkE,EAAiB,aAErBxP,MAAKyP,iBAAmB,SAASlP,GAC7BiP,EAAiBjP,GAGrBP,KAAKuL,iBAAmB,SAASC,GAC7BH,EAAWG,GAGfxL,KAAKyL,qBAAuB,SAASD,GACjCF,EAAeE,GAGnBxL,KAAK0L,MAAQ,YAAa,SAAS/L,GAC/B,GAAI+P,GAAa,SAAS1M,EAAaC,GAMnC,MALKO,SAAQyD,OAAOjE,KAAcA,EAAc4I,KAAKC,OAChDrI,QAAQsI,SAAS7I,KAAUA,MAEhCA,EAAQK,cAAgBkM,EAEjB7P,EAAUoM,MACbxC,YAAc,SAAU,YAAa,WAAY,WAAY,cAAe,UAAWzG,GACvF0G,aAAc,aACdwC,qBAAqB,EACrB1C,SAAU,0gDAkB2FgC,EAAe,KAAOA,EAAe,gGAC5BD,EAAW,KAAOA,EAAW,yEAK3IY,YAAahJ,EAAQgJ,YACrBC,QACIlJ,YAAaA,EACbC,QAASA,GAEbkJ,UAAU,IAIlB,OAAOuD,OAwEflI,EAAOa,UAAU,eAAgB,WAAY,SAASc,GAClD,OACIZ,SAAU,IACVa,kBACIlG,KAAQ,IACRC,QAAW,IACXE,QAAW,IACXE,WAAc,KAElB+F,SAAU,s6CAgBVC,YAAa,SAAUnE,GACvBoE,aAAc,WACdC,KAAM,SAASC,EAAOhB,EAASiB,EAAOC,GAClC,GAAI+F,IACAjH,EAAQ,GAAGoB,cAAc,2BACzBpB,EAAQ,GAAGoB,cAAc,sBACzBpB,EAAQ,GAAGoB,cAAc,4BAC3B8F,IAAI,SAASC,GACZ,MAAOrM,SAAQkF,QAAQmH,IAG1BnG,GAAM9C,OAAO,WAAa,MAAQgD,GAAK1G,KAAK3C,OAAO,WAAa,SAASuG,EAAUC,GAC/E,GAAI+I,GAAY,IAOhB,IALGhJ,EAAWC,EACV+I,EAAY,mBACRhJ,EAAWC,IACf+I,EAAY,oBAEbA,EACC,IAAI,GAAIlN,KAAK+M,GACTA,EAAa/M,GAAGmN,SAASD,GACzB3G,EAAS2E,YAAY6B,EAAa/M,GAAIkN,UA6C9DtI,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS2H,EAAgBjN,GACtF,OACIwF,SAAU,IACV8D,QAAS,UACTC,YAAY,EACZhD,SAAU,SAASZ,EAASiB,GACxB,GAAI4C,GAAU/I,QAAQgJ,UAAU7C,EAAM8C,YAClCC,EAAclJ,QAAQgJ,UAAU7C,EAAMgD,gBAAkBhD,EAAMgD,eAAiB,GAC/EC,IAAcpJ,QAAQgJ,UAAU7C,EAAMkD,eAE1C,OAAO,qDACiBrJ,QAAQgJ,UAAU7C,EAAMmD,aAAe,0BAA4B,IAAM,oIAGhEP,EAAU,eAAiB,IAAM,mCAC1CgD,EAAe,GAAK,wBAA2B,wBAA0B/L,QAAQgJ,UAAU7C,EAAMmD,aAAe,0BAA4B,IAAM,gBAAkBJ,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI/SlD,OACIvG,QAAW,cACXE,QAAW,cACXE,WAAc,iBACd0M,WAAc,aACdvD,YAAe,kBACfH,QAAW,cACXK,YAAe,kBACfI,SAAY,iBAEhBvD,MACIyG,IAAK,SAASxG,EAAOhB,EAASiB,EAAOsD,EAASC,KAG9CiD,KAAM,SAASzG,EAAOhB,EAASiB,EAAOsD,EAASC,GAiE3C,QAASC,GAAmBhH,GACxBiH,EAAa,GAAGjH,MAAQA,EACxBkH,EAAmBC,aAAaL,EAAQM,SAASpH,IAGrD,QAASiK,GAAWlN,GAChB,GAAIiD,GAAQ/F,OAAO8C,EAAMM,QAAQyD,OAAO/D,GAAQ,KAAOwG,EAAMuG,YAAY,GACrExC,EAAWtH,EAAM5F,OAAOmJ,EAAMuG,WAE/B9J,GAAM/C,WACL+J,EAAmBM,GACnBR,EAAQS,cAAcD,KAEtBN,EAAmBjK,GACnB+J,EAAQS,cAAcxK,KAGtB+J,EAAQU,WACRC,EAASC,SAAS,iBAClBlF,EAAekF,SAAS,qBAAqBD,EAASE,YAAY,gBAEtEb,EAAQc,UAYZ,QAASC,GAAqB9D,GACvBA,EAAM+D,OAAO9H,QAAU8G,EAAQiB,WAC9BkC,EAAWlG,EAAM+D,OAAO9H,OAnGhC,GAAIiH,GAAe5J,QAAQkF,QAAQA,EAAQ,GAAGoB,cAAc,UACxDnB,EAAiBnF,QAAQkF,QAAQA,EAAQ,GAAGoB,cAAc,uBAC1DuD,EAAqB1E,EAAeY,WAAW,mBAEnD2D,GAAY,SAASiB,GAClBxF,EAAeyF,OAAOD,IAGzB,IAAIP,GAAWpK,QAAQkF,QAAQC,EAAe,GAAGmB,cAAc,iBAE/DJ,GAAM7H,KAAO6H,EAAMuG,WAAa,OAAS,OACzCvG,EAAMuG,WAAavG,EAAMuG,aAAeV,EAAe,aAAe,cACtE7F,EAAM2G,MAAQpD,EAEdvD,EAAM4G,QAAU,WACZ,OAAQrD,EAAQU,aAAeV,EAAQsD,UAI3CtD,EAAQwB,YAAYC,QAAQ,SAASvI,GACjC,GAAIjD,GAAOM,QAAQyD,OAAOd,IAAU/F,OAAO+F,EAEvCgH,GADDjK,GAAQA,EAAKE,UACOF,EAAK3C,OAAOmJ,EAAMuG,YAElB,QAG3BhD,EAAQ0B,YAAYpO,OAAS,SAASqO,EAAYC,GAC9C,MAAO7H,GAAgB6H,EAAWnF,EAAMuG,aAG5ChD,EAAQ0B,YAAYxL,QAAU,SAASyL,EAAYC,GAC/C,MAAO3H,GAAiB2H,EAAWnF,EAAMuG,WAAYvG,EAAMvG,UAG/D8J,EAAQ0B,YAAYtL,QAAU,SAASuL,EAAYC,GAC/C,MAAOzH,GAAiByH,EAAWnF,EAAMuG,WAAYvG,EAAMrG,UAG/D4J,EAAQ0B,YAAYpH,OAAS,SAASqH,EAAYC,GAC9C,MAAOvH,GAAgBuH,EAAWnF,EAAMuG,WAAYvG,EAAMnG,aAG9D0J,EAAQ0B,YAAYG,SAAW,SAASF,EAAYC,GAChD,MAAOrL,SAAQuL,YAAYpF,EAAMmF,YAAc7B,EAAQM,SAASqB,KAAgB3B,EAAQM,SAASsB,IAGrG5B,EAAQ+B,SAASN,QAAQ,SAASvI,GAC9B,GAAI8I,GAAS7O,OAAO+F,EAAOuD,EAAMuG,YAAY,EAC7C,IAAGhB,EAAO7L,UAAW,CACjB,GAAGI,QAAQyD,OAAOgG,EAAQiC,aAAc,CACpC,GAAIC,GAAgB/O,OAAO6M,EAAQiC,YACnCC,GAAcjL,KAAK+K,EAAO/K,QAC1BiL,EAAcqB,MAAMvB,EAAOuB,SAC3BrB,EAAcjM,KAAK+L,EAAO/L,QAE1B+L,EAASE,EAEb,MAAOF,GAAO9N,SAEd,MAAO,QA4BfuI,EAAM2F,WAAa,SAASC,GACxBU,EAAe/C,EAAQiC,aACtB/L,QAASuG,EAAMvG,QACfE,QAASqG,EAAMrG,QACfE,WAAYmG,EAAMnG,WAClB0I,YAAaqD,IACdnK,KAAKiL,IAQThD,EAAanC,GAAG,mBAAoB+C,GAEpCtE,EAAMyB,IAAI,WAAY,WAClBiC,EAAalC,IAAI,mBAAoB8C,WAQzDxG,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS2H,EAAgBjN,GACtF,OACIwF,SAAU,IACV8D,QAAS,UACT3C,OACIvG,QAAW,OACXE,QAAW,OACXE,WAAc,iBACd0M,WAAc,cAElBxG,KAAM,SAASC,EAAOhB,EAASiB,EAAOsD,EAASC,GAmB3C,QAASmC,GAAWC,GAChBU,EAAe/C,EAAQiC,aACtB/L,QAASuG,EAAMvG,QACfE,QAASqG,EAAMrG,QACfE,WAAYmG,EAAMnG,WAClB0I,YAAaqD,IACdnK,KAAK,SAASvF,GACVqN,EAAQS,cAActN,OAAOR,GAAMW,OAAOmJ,EAAMnJ,SAChD0M,EAAQc,YA1BhBrE,EAAMuG,WAAavG,EAAMuG,YAAc,aAEvChD,EAAQ0B,YAAYpO,OAAS,SAASqO,EAAYC,GAC9C,MAAO7H,GAAgB6H,EAAWnF,EAAMnJ,SAG5C0M,EAAQ0B,YAAYxL,QAAU,SAASyL,EAAYC,GAC/C,MAAO3H,GAAiB2H,EAAWnF,EAAMnJ,OAAQmJ,EAAMvG,UAG3D8J,EAAQ0B,YAAYtL,QAAU,SAASuL,EAAYC,GAC/C,MAAOzH,GAAiByH,EAAWnF,EAAMnJ,OAAQmJ,EAAMrG,UAG3D4J,EAAQ0B,YAAYpH,OAAS,SAASqH,EAAYC,GAC9C,MAAOvH,GAAgBuH,EAAWnF,EAAMnJ,OAAQmJ,EAAMnG,aAe1DmF,EAAQuC,GAAG,QAASoE,GAEpB3F,EAAMyB,IAAI,WAAY,WAClBzC,EAAQwC,IAAI,QAASmE","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$mdIconProvider.icon(icon.id, icon.url);\n\t});\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\n\t\t$templateCache.put(icon.url, icon.svg);\n\t});\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n            \n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n            \n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n            \n            return {};\n        }\n    } \n}]);\n/* global moment, angular */\n\nvar supportsTime = false;\ntry {\n\tvar input = document.createElement('input');\n\tinput.type = 'time';\n\tif(input.type === 'time') {\n\t\tsupportsTime = true;\n\t}\n} catch(e) {}\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    \n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n    \n\t$scope.$mdMedia = $mdMedia;\n\t\n\tthis.switchView = function(close) {\n\t\tif(self.currentView == self.VIEW_HOURS) {\n\t\t\tself.currentView = self.VIEW_MINUTES;\n\t\t} else if(close) {\n\t\t\tthis.confirm();\n\t\t}\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }\n        \n        var time = Math.round(divider / 360 * deg);\n        \n        self.setTime(\n            time\n        );\n        return time;\n    };\n    \n    this.setTime = function(time, type) {\n    \tthis.oldSelected = this.selected;\n        this.selected = time;\n        console.log('setTime: ' + time);\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    console.log(ctrl.selected == ctrl.oldSelected);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView(ctrl.selected == ctrl.oldSelected);\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\">' +\n                            '<md-dialog-content layout=\"column\" layout-wrap>' +\n                                '<md-toolbar layout=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" class=\"md-raised\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-warn md-raised\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch\n                },\n                skipHide: true\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input' + (supportsTime ? '' : ' readonly=\"readonly\"' ) + ' type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n/* global moment, angular */\n\nvar supportsDate = false;\ntry {\n\tvar input = document.createElement('input');\n\tinput.type = 'date';\n\tif(input.type === 'date') {\n\t\tsupportsDate = true;\n\t}\n} catch(e) {}\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n    \n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\t\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n    \t\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\t\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n        \t\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.previousYear = function() {\n    \tvar year = +this.date.format('YYYY') - 1;\n    \tthis.selectYear(year);\n    };\n    \n    this.nextYear = function() {\n    \tvar year = +this.date.format('YYYY') + 1;\n    \tthis.selectYear(year);\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n    \t\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n    \t\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n        \n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;    \n    };\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n            \n            options.displayFormat = DISPLAY_FORMAT;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div>' +\n                                \t'<md-toolbar class=\"md-hue-1 md-primary\" layout=\"row\" layout-align=\"space-between center\" style=\"padding-left: 10px; padding-right: 5px; min-height: 0\">' +\n\t\t\t\t\t\t\t\t        '<md-button aria-label=\"previous year\" class=\"md-icon-button\" ng-click=\"datepicker.previousYear()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n\t\t\t\t\t\t\t\t        '<div style=\"cursor: pointer\" class=\"mdp-calendar-monthyear\" ng-click=\"datepicker.showYear()\">{{ datepicker.date.format(\\'YYYY\\') }}</div>' +\n\t\t\t\t\t\t\t\t        '<md-button aria-label=\"next year\" class=\"md-icon-button\" ng-click=\"datepicker.nextYear()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n\t\t\t\t\t\t\t\t    '</md-toolbar>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" class=\"md-raised\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-warn md-raised\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                skipHide: true\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\t\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0, \n            this.dow\n        )\n    );\n    \n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n            \n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n            \n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day) && \n            (!self.dateFilter || !self.dateFilter(day));\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !minDate.isValid() || \n            date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !maxDate.isValid() || \n            date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n                \n    return !value || \n            angular.isDate(value) || \n            !angular.isFunction(filter) || \n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input' + (supportsDate ? '' : ' readonly=\"readonly\"' ) + ' type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n                \n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                    \n                $transclude(function(clone) {\n                   inputContainer.append(clone); \n                });  \n                \n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n                \n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || (supportsDate ? \"YYYY-MM-DD\" : \"DD/MM/YYYY\");\n                scope.model = ngModel;\n                \n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n                \n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid()) \n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n                \n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n                \n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n                \n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n                \n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n                \n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n                \n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n                            \n                            parsed = originalModel;\n                        }\n                        return parsed.toDate(); \n                    } else\n                        return null;\n                });\n                \n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n                \n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n    \n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n                    \n                    if(!ngModel.$pristine && \n                        messages.hasClass(\"md-auto-hide\") && \n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n    \n                    ngModel.$render();\n                }\n                    \n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }).then(updateDate);\n                };\n                \n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n                \n                inputElement.on(\"reset input blur\", onInputElementEvents);\n                \n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n            \n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n            \n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n            \n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n            \n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate, \n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"],"sourceRoot":"/source/"}